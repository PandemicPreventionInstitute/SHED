{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\fnil\fprq2\fcharset0 0;}{\f6\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f7\fnil\fprq2\fcharset0 Arial;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052 Normal;}
{\s15\sbasedon0\snext16\rtlch\af7\afs28\alang1081 \ltrch\lang1033\langfe2052\hich\af4\loch\ql\nowidctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf0\f4\fs28\lang1033\kerning1\dbch\af6\langfe2052 Heading;}
{\s16\sbasedon0\snext16\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\sl276\slmult1\ql\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052 Text Body;}
{\s17\sbasedon16\snext17\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\sl276\slmult1\ql\nowidctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052 List;}
{\s18\sbasedon0\snext18\rtlch\af7\afs24\alang1081\ai \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\sb120\sa120\ltrpar\cf0\f3\fs24\lang1033\i\kerning1\dbch\af5\langfe2052 Caption;}
{\s19\sbasedon0\snext19\rtlch\af7\afs24\alang255 \ltrch\lang255\langfe255\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang255\kerning1\dbch\af5\langfe255 Index;}
}{\*\generator LibreOffice/7.2.4.1$Windows_X86_64 LibreOffice_project/27d75539669ac387bb498e35313b970b7fe9c4f9}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr2022\mo3\dy26\hr15\min16}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab709
\hyphauto1\viewscale150
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Page Style;}}
\formshade\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\pgndec\sftnnar\saftnnrlc\sectunlocked1\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Summary of initial testing of programs and pipelines for SHED project backend}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Steps and programs tested:}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
paired read repair : BBMap/repair   - required for processing with some downstream programs}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
pair merging : BBMap/bbmerge \u8211\'96 improves some downstream accuracy and processing}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
read collapsing : fastx_collapser \u8211\'96 improves some downstream processing}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
primer trimming : cut_adapt, iVar \u8211\'96 improves accuracy of downstream output}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
mapping : BWA, Minimap2 \u8211\'96 necessary for variant calling}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
variant calling : iVar, SAM Refiner}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Comparision tests summary:}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
primer trimming: cut_adapt is faster, either slightly or significantly.  For samples with clear primers and tiles, the programs are nearly equivalent in activity.  Otherwise iVar trims more (by default parameters).  This is not necessarily good, as in such cases non-primer sequences may be trimmed.}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Mapping: Minimap2 is slightly to moderately faster, depending on the pre-processing.  Mapping activity is slightly greater for BWA (~.1-1%), but mainly due to a propensity to clip reads in order to obtain matches. }
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Variant calling: Processing time depends on upstream processing.  If no dereplication/collapsing is used iVAR is faster.  However, if dereplication/collapsing is used, a pipeline using SAM Refiner is faster.  The two programs are substantively different in what they report, but are different in how they report the variants.}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Other relevant points of comparision:}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Trimming: cut_adapt can be run on either fasta or fastq formated sequences, allowing trimming to be done early in the pipeline.  Ivar runs on sorted bam files and can only be done after mapping.}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Variant Calling: iVar will only report SNP amino acid changes.  SAM Refiner can report MNP amino acid changes, as well as report co-segregating variants.  SAM Refiner also is able to function with dereplicated reads, however, it can not handle separate paired reads accuratly}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Recommended programs/workflow:}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
BBMap for paired read repair and merging when relevent.  cut_adapt for primer removal when relevent.  Minimap2 for mapping.  SAM Refiner for variant calling.}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
Detailed synopsis:}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
In order to get salient information from SRA reads, they must be computationally processed.  At least two pipelines already exist for this purpose, referred to here as the MO and ViralAI pipelines.  Each carries out similar steps to extract data, but use different programs to do so.  To test which method and programs might be best adapted for the SHED project, I ran tests to compare both individuals programs and full pipelines for both speed of processing and output results.  The MO pipeline follows the workflow of merging paired reads when applicable (BBMap/bbmerge), dereplicating reads (fastx_collapser), trim primers (cut_adapt), map reads (minimap2) and call variants (SAM Refiner).  Vsearch was previously used for merging and dereplicating, however it has been replaced with more up to date and streamlined programs.  The ViralAI pipeline is actually two different pipelines designed for different sequencing strategies, nanopore and illumina.  Both mainly appear to follow the same general workflow.  Reads are quality trimmed (trim_galore(which is actually a wrapper for cut_adapt and fastqc)), mapped (BWA or Minimap2), primer trimmed (iVar) and variants called (iVar).  }
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
In order to run tests, 7 samples from the SRA were selected: ERR5996055, ERR6008925, ERR7277155, ERR7395993, ERR7505063, SRR15128978, SRR15128983.  The first 5 are clinical samples analyzed by ViralAI.  The last two are SARS-Cov-2 wastewater samples.  Paired reads for each sample were obtained via NCBI\u8217\'92s SRA toolkit.  Multiple head to head comparisons were made between programs carrying out equivalent functions using a set of the same input(s) when possible.  Using the exact same inputs was not possible with the primer trimming, as each program works on different file formats, however, reads for each set were otherwise equivalent.  Cut_adapt proved to be faster (~2x for separate paired reads,  ~1.1x for merged/collapsed reads) than iVar.  The number of reads that were trimmed of primers were very similar between the cut_adapt and iVar when the reads were clearly tiled with obvious primers (~99%).  Otherwise, with default settings, iVar removed primers from nearly twice as many sequences (~20% vs ~10%).  Neither is necessarily better, as in these cases there is a balance between removing primers and non-primer sequences.  Changing parameters of either program could effectively nullify any difference in results. I would recommend the use of cut_adapt due to its speed in some circumstances.}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
For mapping, minimap2 was the winner for processing speed, being up ~2 times faster than bwa mem.  With default settings, BWA consistently mapped more matches than minimap2, however the extra matches were mainly due to BWA clipping reads in order to make partial sequence matches, often as supplementary matches.  This behavior can be suppressed by changing program parameters.  Otherwise, the mapping results were effectively the same.  Since both programs have numerous parameters to alter their mapping function, there isn\u8217\'92t a hard different in their outputs.  I would recommend using minimap2 over BWA for its speed.}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
When the same sam file was used for variant calling, iVar was slightly faster (~1.1x) than SAM Refiner.  However, iVar can not use counts from a dereplicated reads, while SAM Refiner can, allowing the later to process reads ~5x faster than iVar.  When taking into account the necessary pre-processing time of merging and dereplication, the pipeline with SAM Refiner was only marginally faster.  In terms of output results, when both programs are able to accurately process the same SAM file, the results are effectively the same with the default parameters, though the manner of reporting variants is somewhat different.  For example, the Spike D614G polymorphism is now fixed in circulating SARS-Cov-2 lineages.  In the sample SRR15128978, iVar reports the line:}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\fs20\loch

\par \trowd\trql\trleft-60\ltrrow\trrh256\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx1236\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx1836\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx2036\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx2251\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx2528\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx2805\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx3084\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx3685\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx4287\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx4564\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx5444\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx6045\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx6215\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx6817\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx8792\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx9316\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx9519\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx10009\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx10225\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
NC_045512.2}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
23403}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
A}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
G}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
28}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
17}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
36}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
88722}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
64305}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
36}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
0.999594}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
88758}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
0}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
TRUE}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
cds-YP_009724390.1}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
GAT}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
D}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
GGT}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
G}\cell\row\pard\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\nowidctlpar\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
where it reports 28 instances of A and 88722 of G.  SAM Refiner reports:}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\fs20\loch

\par \trowd\trql\trleft-60\ltrrow\trrh256\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx572\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx769\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx2651\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx2929\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx3315\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx3684\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx4288\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx4565\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx5167\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx5384\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx5984\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx6540\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx7002\clpadft3\clpadt30\clpadfr3\clpadr30\clvertalb\cellx7463\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
23403}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
A}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
S_nt:1841_AA:D614}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
39}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
120}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
11}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
90650}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
19}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
90844}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
G}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
90650}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\qr\nowidctlpar{\loch\fs20\loch
0.998}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
S_G}\cell\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\intbl\nowidctlpar{\loch\fs20\loch
S_G}\cell\row\pard\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch\nowidctlpar\loch\fs20\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
where it reports 39 instances of A and 90650 of G.  In general iVar reports slightly fewer counts, due to a default quality cutoff, but without any significant effect except for some cases where the abundance of the variant is at the edge of the reporting cutoff.  However, the abundance cutoff is adjustable, even removable.  Conversely, quality trimming reads prior would also remove this difference.  No other discrepancies were noticed.}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052\loch

\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\ql\nowidctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af5\langfe2052{\loch
SAM Refiner has additional abilities and functions that would recommend it over iVar.  SAM Refiner will report MNP amino acid changes, which iVar can not.  SAM Refiner can also track and report co-segregating mutations in reads.  Ivar is able to generate a consensus sequence.  While SAM Refiner doesn\u8217\'92t have such a function, scripts for doing so based on SAM Refiner nt call output already exist.  }
\par }