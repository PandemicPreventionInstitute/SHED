
"""
Written by Devon Gregory
This snakefile is meant to be run via snakemake to perform the
query and SRA download for the bioinformatics pipeline.
Last edited on 7-9-22
to do: implement tests
"""
import os
import time
from snakemake.utils import min_version

min_version("7.8.0")

configfile: "config.yaml"

include: "modules/snakefunctions.py"

# query SRA, get the meta data and pull accessions from it
DATE_STAMP = time.time()
sra_query(config["query"], DATE_STAMP)
parse_xml_meta(DATE_STAMP)
acc_list = get_sample_acc1(config["reprocess"])

# commit above 4 lines and uncomment 1 of the 3 next lines to test w/o running the query

# acc_list = "SRR19451936 SRR19433247 SRR18583185 SRR18583239 SRR15294802 SRR15294332 SRR15240788 SRR15240814 SRR15240439 SRR17887892 SRR17887900 SRR17887928 SRR17888005 SRR17888008 SRR17888010 SRR17888013 ERR5014717"
# acc_list = "SRR18541040 ERR5996055 SRR15294802 SRR15240439 SRR17887900 SRR17888010 SRR17689171 ERR5019844"
# acc_list = "SRR1asdf40439 SRR15240439 SRR17887900 SRR17888010"


rule download_sra:
    """
    Downloads the sra files for the samples collected in the query
    using NCBI's SRA Tools prefetch, catches bad accession formats, otherwise
    errors cause an exit
    """
    log:
        "logs/sra.log"
    params:
        acc_list
    conda:
        "envs/sra-tools.yaml"
    shell:
        """
        set +e
        acc='{params}'
        for f in $acc
        do
        prefetch $f -O SRAs/ >>{log} 2>&1
        exitcode=$?
        if [ $exitcode -eq 3 ]
        then
            touch 'SRAs/'$f'.badacc'
        elif [ $exitcode -ne 0 ]
        then
            echo "prefetch failed with exitcode:"
            echo "$exitcode"
            exit 1
        fi
        done
        """
