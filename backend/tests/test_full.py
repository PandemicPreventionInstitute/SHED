"""
    module for testing full pipeline
    based on code generated by snakemake
    last edited 7-12-22
"""
import sys
from tempfile import TemporaryDirectory
import shutil
from pathlib import Path, PurePosixPath
import common


def test_full():
    """
    function to test full pipeline
    """

    with TemporaryDirectory() as tmpdir:
        workdir = Path(tmpdir) / "workdir"
        data_path = PurePosixPath("tests/full/data")
        expected_path = PurePosixPath("tests/full/expected")

        # Copy data to the temporary workdir.
        shutil.copytree(data_path, workdir)

        # dbg
        print("full", file=sys.stderr)

        additional_variable = [
            "--config",
            "query=ERR9812480+or+SRR17866146+or+ERR9812678",
            "run_ID=test",
            "--snakefile",
            "snakefile1",
        ]
        common.run_snakemake(workdir, "", additional_variable)

        additional_variable = [
            "--snakefile",
            "snakefile2",
        ]
        common.run_snakemake(workdir, "", additional_variable)

        additional_variable = [
            "--snakefile",
            "snakefile3",
        ]
        common.run_snakemake(workdir, "", additional_variable)

        # Check the output byte by byte using cmp.
        # To modify this behavior, you can inherit from common.OutputChecker in here
        # and overwrite the method `compare_files(generated_file, expected_file),
        # also see common.py.
        common.OutputChecker(data_path, expected_path, workdir).check()
